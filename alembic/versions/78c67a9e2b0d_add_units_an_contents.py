"""add units an contents

Revision ID: 78c67a9e2b0d
Revises: b4f5504a7746
Create Date: 2024-04-22 19:17:30.593642

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '78c67a9e2b0d'
down_revision: Union[str, None] = 'b4f5504a7746'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('units',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['courses.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_units_id'), 'units', ['id'], unique=False)
    op.alter_column('courses', 'title',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.alter_column('courses', 'description',
               existing_type=sa.TEXT(),
               nullable=False)
    op.alter_column('courses', 'status',
               existing_type=postgresql.ENUM('NO_VISIBLE', 'VISIBLE', name='status'),
               nullable=False)
    op.alter_column('courses', 'price',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('courses', 'image_path',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.alter_column('courses', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False)
    op.alter_column('courses', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False)
    op.alter_column('courses', 'deleted_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('courses', 'deleted_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.alter_column('courses', 'updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False)
    op.alter_column('courses', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False)
    op.alter_column('courses', 'image_path',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.alter_column('courses', 'price',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('courses', 'status',
               existing_type=postgresql.ENUM('NO_VISIBLE', 'VISIBLE', name='status'),
               nullable=True)
    op.alter_column('courses', 'description',
               existing_type=sa.TEXT(),
               nullable=True)
    op.alter_column('courses', 'title',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.drop_index(op.f('ix_units_id'), table_name='units')
    op.drop_table('units')
    # ### end Alembic commands ###
